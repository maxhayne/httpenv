name: Github Actions for Docker
run-name: ${{ github.actor }} is integrating Docker

# Specifying under which circumstances this action will be performed
on:
  push:
    branches:
      - main
  pull_request:

# Specify the jobs to be performed for this workflow
jobs:
  build-image:
    name: Build Docker
    runs-on: ubuntu-latest

    # This is necessary if you want to use peter-evans/find-comment@v2 or /create-or-update-comment@v3
    permissions:
      pull-requests: write # need permission to write comments during pull requests

    steps:

      # Set up QEMU for multi-platform builds ie Intel, Arm, etc.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Log in to Dockerhub using credentials stored as repo secrets
      - name: Log in to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Must be included in order to use caching in the next step
      - name: Set up Buildx (caching support)
        uses: docker/setup-buildx-action@v3

      # Adding metadata intelligence
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: mhayne/httpenv-fork
          flavor: |
            latest=false
          tags: |
            type=raw, value=04
            #type=raw, value=latest, enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            #type=ref, event=pr
            #type=ref, event=branch
            #type=semver, pattern={{version}}

      - name: Build on Docker
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ github.run_id }}
          #tags: ${{ steps.docker_meta.outputs.tags }} # Corresponds to Docker meta step
          #labels: ${{ steps.docker_meta.outputs.labels }} # Corresponds to Docker meta step
          cache-from: type=gha # Corresponds to Buildx step
          cache-to: type=gha,mode=max # Corresponds to Buildx step
          platforms: linux/amd64, linux/arm64, linux/arm/v7 # Corresponds to QEMU step

      # Running CVE scan using Trivy
      - name: Run Trivy for all CVE's (non-blocking because exit-code is 0)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.run_id }} # short, unique id
          exit-code: 0
          format: table

      # If a pull request, put image tags in the PR comments
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v2
        if: github.event_name == 'pull-request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed

      # If a pull request, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v3
        if: github.event_name == 'pull-request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
              '''text
              ${{ steps.docker_meta.outputs.tags }}
              '''

              Labels added to images:
              '''text
              ${{ steps.docker_meta.outputs.labels }}
              '''

              edit-mode: replace
